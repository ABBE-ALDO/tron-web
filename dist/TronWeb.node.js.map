{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///./src/lib/contract/index.js","webpack:///./src/lib/contract/method.js","webpack:///./src/lib/providers/HttpProvider.js","webpack:///./src/lib/providers/index.js","webpack:///./src/lib/transactionBuilder.js","webpack:///./src/lib/trx.js","webpack:///./src/lib/witness.js","webpack:///./src/utils/accounts.js","webpack:///./src/utils/address.js","webpack:///./src/utils/base58.js","webpack:///./src/utils/base64.js","webpack:///./src/utils/bytes.js","webpack:///./src/utils/code.js","webpack:///./src/utils/crypto.js","webpack:///./src/utils/index.js","webpack:///external \"@babel/runtime/helpers/asyncToGenerator\"","webpack:///external \"@babel/runtime/helpers/classCallCheck\"","webpack:///external \"@babel/runtime/helpers/createClass\"","webpack:///external \"@babel/runtime/helpers/defineProperty\"","webpack:///external \"@babel/runtime/helpers/objectSpread\"","webpack:///external \"@babel/runtime/helpers/slicedToArray\"","webpack:///external \"@babel/runtime/helpers/toConsumableArray\"","webpack:///external \"@babel/runtime/helpers/typeof\"","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"axios\"","webpack:///external \"bignumber.js\"","webpack:///external \"elliptic\"","webpack:///external \"ethers\"","webpack:///external \"js-sha3\"","webpack:///external \"jssha\"","webpack:///external \"source-map-support/register\"","webpack:///external \"validator\""],"names":["TronWeb","fullNode","solidityNode","eventServer","privateKey","isString","HttpProvider","setFullNode","setSolidityNode","setEventServer","providers","BigNumber","defaultBlock","defaultPrivateKey","defaultAddress","hex","base58","forEach","key","setPrivateKey","transactionBuilder","trx","witness","injectPromise","promiseInjector","blockID","isInteger","Error","Math","abs","setAddress","address","fromPrivateKey","isAddress","toHex","fromHex","provider","Object","values","some","knownProvider","get","then","data","hasProperty","catch","isValidProvider","setStatusPage","isValidURL","currentProviders","contractAddress","eventName","blockNumber","callback","getEventResult","routeParams","push","join","isArray","map","event","mapEvent","err","response","transactionID","getEventByTransacionID","abi","isConnected","isEventServerConnected","string","val","isBoolean","fromDecimal","isBigNumber","fromUtf8","JSON","stringify","indexOf","isFinite","Buffer","from","toString","padding","padEnd","value","toBigNumber","toNumber","number","result","lessThan","substr","sun","div","times","amount","replace","length","crypto","getBase58CheckAddress","code","hexStr2byteArray","isAddressValid","solditySource","account","accounts","generateAccount","isHex","toLowerCase","byteArray2hexStr","decodeBase58Address","pkToAddress","Contract","tronWeb","eventListener","bytecode","deployed","lastBlock","methods","props","loadAbi","events","sort","a","b","block","latestEvent","newEvents","filter","index","duplicate","slice","priorEvent","clearInterval","eventCallback","_getEvents","setInterval","console","error","property","hasOwnProperty","__proto__","prop","func","method","methodCall","onMethod","bind","name","functionSelector","signature","options","isFunction","new","createSmartContract","transaction","sign","signedTransaction","sendRawTransaction","contract","at","contract_address","getContract","entrys","includes","self","start","startCallback","_startEventListener","stop","_stopEventListener","abiCoder","utils","AbiCoder","getFunctionSelector","getParamTypes","inputs","params","type","decodeOutput","output","names","types","decode","reduce","obj","arg","Method","outputs","sha3","defaultOptions","feeLimit","callValue","shouldPollResponse","args","call","methodArgs","_call","send","_send","watch","_watch","stateMutability","parameters","triggerSmartContract","constant_result","ex","broadcast","txID","checkResult","getTransactionInfo","keys","setTimeout","toUtf8","resMessage","decoded","contractResult","listener","getEvents","Promise","reject","bindListener","parseEvent","host","timeout","user","password","headers","statusPage","isNaN","isObject","charAt","instance","create","baseURL","auth","request","hasProperties","url","payload","TransactionBuilder","to","sendTrx","to_address","owner_address","parseInt","tokenID","sendToken","asset_name","issuerAddress","buyer","purchaseToken","duration","resource","freezeBalance","frozen_balance","frozen_duration","unfreezeBalance","withdrawBlockRewards","applyForSR","votes","voterAddress","vote","invalid","entries","srAddress","voteCount","vote_address","vote_count","userFeePercentage","parse","payable","i","encode","fee_limit","call_value","consume_user_resource_percent","parameter","function_selector","message","createToken","abbreviation","description","totalSupply","trxRatio","tokenRatio","saleStart","Date","now","saleEnd","freeBandwidth","freeBandwidthLimit","frozenAmount","frozenDuration","abbr","total_supply","trx_num","num","start_time","end_time","free_asset_net_limit","public_free_asset_net_limit","frozen_supply","frozen_amount","frozen_days","updateToken","new_limit","new_public_limit","createProposal","proposalID","deleteProposal","proposal_id","hasApproval","voteProposal","is_add_approval","isApproval","exchangeID","tokenName","tokenAmount","ownerAddress","injectExchangeTokens","exchange_id","token_id","fromAscii","quant","withdrawExchangeTokens","tokenAmountSold","tokenAmountExpected","tradeExchangeTokens","expected","Trx","token","getCurrentBlock","getBlock","getBlockByHash","getBlockByNumber","blockHash","getBlockTransactionCount","transactions","getTransactionFromBlock","getTransaction","limit","offset","getTransactionsToAddress","getTransactionsRelated","getTransactionsFromAddress","direction","tx","raw_data","timestamp","getAccount","getBalance","balance","getBandwidth","freeNetUsed","freeNetLimit","NetUsed","NetLimit","getTokensIssuedByAddress","assetIssue","tokens","parseToken","getTokenFromID","listNodes","nodes","port","end","getBlockRange","startNum","endNum","listSuperRepresentatives","witnesses","listTokens","timeUntilNextVoteCycle","floor","signTransaction","sendTransaction","getProposal","id","proposal","listProposals","proposals","getChainParameters","chainParameter","getAccountResources","resources","getExchangeByID","exchange","listExchanges","exchanges","Witness","priKeyBytes","pubKeyBytes","addressBytes","publicKey","isTestNet","process","env","NET","ADDRESS_SIZE","ADDRESS_PREFIX","ADDRESS_PREFIX_BYTE","ALPHABET","ALPHABET_MAP","BASE","encode58","buffer","j","digits","carry","reverse","digit","decode58","bytes","c","Base64","_keyStr","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","charCodeAt","encodeIgnoreUtf8","inputBytes","String","fromCharCode","_utf8_decode","decodeToByteArray","_out2ByteArray","utftext","byteArray","Array","c1","c2","_utf8_encode","n","c3","byte2hexStr","byte","hexByteMap","str","bytesToString","arr","one","v","match","bytesLength","store","st","hextoString","split","out","tmp","base64DecodeFromString","string64","bin2String","array","arrayEquals","array1","array2","stringToBytes","len","charValue","hexChar2byte","d","isHexChar","k","decodeBytes","base64EncodeToString","strToDate","tempStrs","dateStrs","year","month","day","timeStrs","hour","minute","second","isNumber","getStringType","hash0","SHA256","hash1","checkSum","concat","base58Sting","checkSum1","ECKeySign","arrayToBase64String","btoa","signBytes","contents","hashBytes","getRowBytesFromTransactionBase64","base64Data","bytesDecode","proto","protocol","Transaction","deserializeBinary","raw","getRawData","serializeBinary","genPriKey","ec","genKeyPair","priKey","getPrivate","priKeyHex","computeAddress","pubBytes","hash","addressHex","substring","getAddressFromPriKey","getPubKeyFromPriKey","decode58Check","addressStr","decodeCheck","decodeData","base58Str","getBase58CheckAddressFromPriKeyBase64String","priKeyBase64String","getHexStrAddressFromPriKeyBase64String","getAddressFromPriKeyBase64String","addressBase64","keyFromPrivate","pubkey","getPublic","x","y","xHex","yHex","pubkeyHex","pubkeyBytes","r","s","recoveryParam","rHex","sHex","idHex","signHex","msgBytes","shaObj","msgHex","update","hashHex","getHash","passwordToAddress","com_priKeyBytes","com_addressBytes","isURL","protocols","prototype","isJson","bool","constructor","Number","properties","resolve","res","scope","block_number","block_timestamp","event_name","transaction_id"],"mappings":"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","file":"TronWeb.node.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import providers from 'lib/providers';\nimport utils from 'utils';\nimport axios from 'axios';\nimport BigNumber from 'bignumber.js';\nimport { sha3_256 } from 'js-sha3';\n\nimport TransactionBuilder from 'lib/transactionBuilder';\nimport Trx from 'lib/trx';\nimport Witness from 'lib/witness';\nimport Contract from 'lib/contract';\n\nexport default class TronWeb {\n    static providers = providers;\n    static BigNumber = BigNumber;\n    \n    constructor(fullNode, solidityNode, eventServer = false, privateKey = false) {\n        if(utils.isString(fullNode))\n            fullNode = new providers.HttpProvider(fullNode);\n\n        if(utils.isString(solidityNode))\n            solidityNode = new providers.HttpProvider(solidityNode);\n\n        this.setFullNode(fullNode);\n        this.setSolidityNode(solidityNode);\n        this.setEventServer(eventServer);\n        \n        this.providers = providers;\n        this.BigNumber = BigNumber;\n\n        this.defaultBlock = false;\n        this.defaultPrivateKey = false;\n        this.defaultAddress = {\n            hex: false,\n            base58: false\n        };\n        \n        [\n            'sha3', 'toHex', 'toUtf8', 'fromUtf8',\n            'toAscii', 'fromAscii', 'toDecimal', 'fromDecimal',\n            'toSun', 'fromSun', 'toBigNumber', 'isAddress',\n            'compile', 'createAccount', 'address'\n        ].forEach(key => {\n            this[key] = TronWeb[key];\n        });\n\n        if(privateKey)\n            this.setPrivateKey(privateKey);\n\n        this.transactionBuilder = new TransactionBuilder(this);\n        this.trx = new Trx(this);\n        this.witness = new Witness(this);\n\n        this.injectPromise = utils.promiseInjector(this);\n    }\n\n    setDefaultBlock(blockID = false) {\n        if(blockID === false || blockID == 'latest' || blockID == 'earliest' || blockID === 0)\n            return this.defaultBlock = blockID;\n\n        if(!utils.isInteger(blockID) || !blockID)\n            throw new Error('Invalid block ID provided');\n\n        this.defaultBlock = Math.abs(blockID);\n    }\n\n    setPrivateKey(privateKey) {\n        // Validate private key\n        try {\n            this.setAddress(\n                this.address.fromPrivateKey(privateKey)\n            );\n        } catch {\n            throw new Error('Invalid private key provided');\n        }\n\n        // TODO: Validate private key\n        this.defaultPrivateKey = privateKey;        \n    }\n\n    setAddress(address) {\n        if(!this.isAddress(address))\n            throw new Error('Invalid address provided');\n\n        const hex = this.address.toHex(address);\n        const base58 = this.address.fromHex(address);\n\n        if(this.defaultPrivateKey && this.address.fromPrivateKey(this.defaultPrivateKey) !== base58)\n           this.defaultPrivateKey = false;\n\n        this.defaultAddress = {\n            hex,\n            base58\n        };\n    }\n\n    isValidProvider(provider) {\n        return Object.values(providers).some(knownProvider => provider instanceof knownProvider);\n    }\n\n    isEventServerConnected() {\n        if(!this.eventServer)\n            return false;\n\n        return axios.get(this.eventServer).then(({ data }) => {\n            return utils.hasProperty(data, '_links');\n        }).catch(() => false);\n    }\n\n    setFullNode(fullNode) {\n        if(utils.isString(fullNode))\n            fullNode = new providers.HttpProvider(fullNode);\n\n        if(!this.isValidProvider(fullNode))\n            throw new Error('Invalid full node provided');\n\n        this.fullNode = fullNode;\n        this.fullNode.setStatusPage('wallet/getnowblock');\n    }\n\n    setSolidityNode(solidityNode) {\n        if(utils.isString(solidityNode))\n            solidityNode = new providers.HttpProvider(solidityNode);\n\n        if(!this.isValidProvider(solidityNode))\n            throw new Error('Invalid solidity node provided');\n\n        this.solidityNode = solidityNode;\n        this.solidityNode.setStatusPage('walletsolidity/getnowblock');\n    }\n\n    setEventServer(eventServer = false) {\n        if(eventServer !== false && !utils.isValidURL(eventServer))\n            throw new Error('Invalid URL provided for event server');\n\n        this.eventServer = eventServer;\n    }\n\n    currentProviders() {\n        return {\n            fullNode: this.fullNode,\n            solidityNode: this.solidityNode,\n            eventServer: this.eventServer\n        };\n    }\n\n    currentProvider() {\n        return this.currentProviders();\n    }\n\n    getEventResult(contractAddress = false, eventName = false, blockNumber = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getEventResult, contractAddress, eventName, blockNumber);\n\n        if(!this.eventServer)\n            callback('No event server configured');\n\n        const routeParams = [];\n\n        if(!this.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        if(eventName && !contractAddress)\n            return callback('Usage of event name filtering requires a contract address');\n        \n        if(blockNumber && !eventName)\n            return callback('Usage of block number filtering requires an event name');\n\n        if(contractAddress)\n            routeParams.push(this.address.fromHex(contractAddress));\n\n        if(eventName)\n            routeParams.push(eventName);\n\n        if(blockNumber)\n            routeParams.push(blockNumber);\n\n        return axios(`${this.eventServer}/event/contract/${routeParams.join('/')}`).then(({ data = false }) => {\n            if(!data)\n                return callback('Unknown error occurred');\n\n            if(!utils.isArray(data))\n                return callback(data);\n\n            return callback(null, \n                data.map(event => utils.mapEvent(event))\n            );\n        }).catch(err => callback((err.response && err.response.data) || err)); \n    }\n\n    getEventByTransacionID(transactionID = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getEventByTransacionID, transactionID);\n\n        if(!this.eventServer)\n            callback('No event server configured');\n\n        return axios(`${this.eventServer}/event/transaction/${transactionID}`).then(({ data = false }) => {\n            if(!data)\n                return callback('Unknown error occurred');\n\n            if(!utils.isArray(data))\n                return callback(data);\n\n            return callback(null, \n                data.map(event => utils.mapEvent(event))\n            );\n        }).catch(err => callback((err.response && err.response.data) || err));\n    }\n\n    contract(abi = [], address = false) {\n        return new Contract(this, abi, address);\n    }\n\n    static get address() {\n        return {\n            fromHex(address) {\n                if(!utils.isHex(address))\n                    return address;\n\n                return utils.crypto.getBase58CheckAddress(\n                    utils.code.hexStr2byteArray(address)\n                );\n            },\n            toHex(address) {\n                if(utils.isHex(address))\n                    return address.toLowerCase();\n\n                return utils.code.byteArray2hexStr(\n                    utils.crypto.decodeBase58Address(address)\n                ).toLowerCase();\n            },\n            fromPrivateKey(privateKey) {\n                try {\n                    return utils.crypto.pkToAddress(privateKey);\n                } catch { return false; }\n            }\n        }\n    }\n\n    static sha3(string) {\n        return sha3_256(string);\n    }\n\n    static toHex(val) {\n        if(utils.isBoolean(val))\n            return TronWeb.fromDecimal(+val);\n\n        if(utils.isBigNumber(val))\n            return TronWeb.fromDecimal(val);\n\n        if(typeof val === 'object')\n            return TronWeb.fromUtf8(JSON.stringify(val));\n\n        if(utils.isString(val)) {\n            if(val.indexOf('-0x') === 0)\n                return TronWeb.fromDecimal(val);\n\n            if(val.indexOf('0x') === 0)\n                return val;\n\n            if(!isFinite(val))\n                return TronWeb.fromUtf8(val);\n        }\n\n        return TronWeb.fromDecimal(val);\n    }\n\n    static toUtf8(hex) {\n        return Buffer.from(hex, 'hex').toString('utf8');\n    }\n\n    static fromUtf8(string) {\n        return Buffer.from(string, 'utf8').toString('hex');\n    }\n\n    static toAscii(hex) {\n        return Buffer.from(hex, 'hex').toString('ascii');\n    }\n\n    static fromAscii(string, padding) {\n        return Buffer.from(string, 'ascii').toString('hex').padEnd(padding, '0');\n    }\n\n    static toDecimal(value) {\n        return TronWeb.toBigNumber(value).toNumber();\n    }\n\n    static fromDecimal(value) {\n        const number = TronWeb.toBigNumber(value);\n        const result = number.toString(16);\n\n        return number.lessThan(0) ? '-0x' + result.substr(1) : '0x' + result;\n    }\n\n    static fromSun(sun) {\n        const trx = TronWeb.toBigNumber(trx).div(1_000_000);        \n        return utils.isBigNumber(sun) ? trx : trx.toString(10);\n    }\n\n    static toSun(trx) {\n        const sun = TronWeb.toBigNumber(trx).times(1_000_000);        \n        return utils.isBigNumber(trx) ? sun : sun.toString(10);\n    }\n\n    static toBigNumber(amount = 0) {\n        if(utils.isBigNumber(amount))\n            return amount;\n\n        if(utils.isString(amount) && (amount.indexOf('0x') === 0 || amount.indexOf('-0x') === 0))\n            return new BigNumber(amount.replace('0x', ''), 16);\n\n        return new BigNumber(amount.toString(10), 10);\n    }\n\n    static isAddress(address = false) {\n        if(!utils.isString(address))\n            return false;\n\n        // Convert HEX to Base58\n        if(address.length === 42) {\n            return TronWeb.isAddress(\n                utils.crypto.getBase58CheckAddress(\n                    utils.code.hexStr2byteArray(address)\n                )\n            );\n        }\n\n        return utils.crypto.isAddressValid(address);\n    }\n\n    // TODO\n    static compile(solditySource) {\n\n    }\n\n    static async createAccount(callback = false) {\n        const account = utils.accounts.generateAccount();\n\n        if(callback)\n            callback(null, account);\n\n        return account;\n    }\n\n    async isConnected(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.isConnected);\n\n        callback(null, {\n            fullNode: await this.fullNode.isConnected(),\n            solidityNode: await this.solidityNode.isConnected(),\n            eventServer: await this.isEventServerConnected()\n        });\n    }\n};","import TronWeb from 'index';\nimport utils from 'utils';\nimport Method from './method';\n\nexport default class Contract {\n    constructor(tronWeb = false, abi = [], address = false) {\n        if(!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.injectPromise = utils.promiseInjector(this);\n\n        this.address = address;\n        this.abi = abi;\n\n        this.eventListener = false;\n        this.bytecode = false;        \n        this.deployed = false;\n        this.lastBlock = false;  \n\n        this.methods = {};\n        this.props = [];\n\n        if(this.tronWeb.isAddress(address))\n            this.deployed = true;\n        else this.address = false;\n\n        this.loadAbi(abi);\n    }\n\n    async _getEvents() {\n        const events = await this.tronWeb.getEventResult(this.address);\n        const [ latestEvent ] = events.sort((a, b) => b.block - a.block);\n        const newEvents = events.filter((event, index) => {\n            const duplicate = events.slice(0, index).some(priorEvent => (\n                JSON.stringify(priorEvent) == JSON.stringify(event)\n            ));\n\n            if(duplicate)\n                return false;\n            \n            if(!this.lastBlock)\n                return true;            \n\n            return event.block > this.lastBlock;\n        });\n\n        if(latestEvent)\n            this.lastBlock = latestEvent.block;\n\n        return newEvents;\n    }\n\n    async _startEventListener(callback) {\n        if(this.eventListener)\n            clearInterval(this.eventListener);\n\n        if(!this.tronWeb.eventServer)\n            throw new Error('Event server is not configured');\n\n        if(!this.address)\n            throw new Error('Contract is not configured with an address');\n\n        this.eventCallback = callback;\n        await this._getEvents();\n\n        this.eventListener = setInterval(() => {\n            this._getEvents().then(newEvents => newEvents.forEach(event => {\n                this.eventCallback && this.eventCallback(event)\n            })).catch(err => {\n                console.error('Failed to get event list', err);\n            });\n        }, 3000);\n    }\n\n    _stopEventListener() {\n        if(!this.eventListener)\n            return;\n\n        clearInterval(this.eventListener);\n        this.eventListener = false;\n        this.eventCallback = false;\n    }\n\n    hasProperty(property) {\n        return this.hasOwnProperty(property) || this.__proto__.hasOwnProperty(property);\n    }\n\n    loadAbi(abi) {\n        this.abi = abi;\n        this.methods = {};\n\n        this.props.forEach(prop => delete this[prop]);\n\n        abi.forEach(func => {\n            const method = new Method(this, func);\n            const methodCall = method.onMethod.bind(method);\n\n            const {\n                name,\n                functionSelector,\n                signature\n            } = method;\n\n            this.methods[name] = methodCall;\n            this.methods[functionSelector] = methodCall;\n            this.methods[signature] = methodCall;\n\n            if(!this.hasProperty(name)) {\n                this[name] = methodCall;\n                this.props.push(name);\n            }\n\n            if(!this.hasProperty(functionSelector)) {\n                this[functionSelector] = methodCall;\n                this.props.push(functionSelector);\n            }\n\n            if(!this.hasProperty(signature)) {\n                this[signature] = methodCall;\n                this.props.push(signature);\n            }\n        });\n    }\n\n    async new(options, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if(utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.new, options, privateKey);\n\n        try {\n            const address = this.tronWeb.address.fromPrivateKey(privateKey);\n            const transaction = await this.tronWeb.transactionBuilder.createSmartContract(options, address);\n            const signedTransaction = await this.tronWeb.trx.sign(transaction, privateKey);\n            const contract = await this.tronWeb.trx.sendRawTransaction(signedTransaction);\n\n            if(!contract.result)\n                return callback('Unknown error: ' + JSON.stringify(contract, null, 2));\n\n            return this.at(signedTransaction.contract_address, callback);\n        } catch(ex) {\n            return callback(ex);\n        }        \n    }\n\n    async at(contractAddress, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.at, contractAddress);\n\n        try {\n            const contract = await this.tronWeb.trx.getContract(contractAddress);\n\n            if(!contract.contract_address)\n                callback('Unknown error: ' + JSON.stringify(contract, null, 2));\n\n            this.address = contract.contract_address;\n            this.bytecode = contract.bytecode;\n            this.deployed = true;\n\n            this.loadAbi(contract.abi.entrys);\n\n            callback(null, this);\n        } catch(ex) {\n            if(ex.toString().includes('does not exist'))\n                return callback('Contract has not been deployed on the network');\n\n            return callback(ex);\n        }        \n    }\n\n    events(callback = false) {\n        if(!utils.isFunction(callback))\n            throw new Error('Callback function expected');\n\n        const self = this;\n\n        return {\n            start(startCallback = false) {\n                if(!startCallback) {\n                    self._startEventListener(callback);\n                    return this;\n                }\n\n                self._startEventListener(callback).then(() => {\n                    startCallback();\n                }).catch(err => {\n                    startCallback(err)\n                });\n\n                return this;\n            },\n            stop() {\n                self._stopEventListener();\n            }\n        };\n    }\n}\n","import Ethers from 'ethers';\nimport utils from 'utils';\n\nconst abiCoder = new Ethers.utils.AbiCoder();\n\nconst getFunctionSelector = abi => {\n    return abi.name + '(' + getParamTypes(abi.inputs || []).join(',') + ')';\n}\n\nconst getParamTypes = params => {\n    return params.map(({ type }) => type);\n}\n\nconst decodeOutput = (abi, output) => {\n    const names = abi.map(({ name }) => name).filter(name => !!name);\n    const types = abi.map(({ type }) => type);\n\n    return abiCoder.decode(types, output).reduce((obj, arg, index) => {\n        if(types[index] == 'address')\n            arg = '41' + arg.substr(2).toLowerCase();\n\n        if(names.length)\n            obj[names[index]] = arg;\n        else obj.push(arg);\n\n        return obj;\n    }, names.length ? {} : []);\n};\n\nexport default class Method {\n    constructor(contract, abi) {\n        this.tronWeb = contract.tronWeb;\n        this.contract = contract;\n\n        this.abi = abi;\n        this.name = abi.name || 'constructor';\n\n        this.inputs = abi.inputs || [];\n        this.outputs = abi.outputs || [];\n\n        this.signature = this.tronWeb.sha3(this.name).slice(0, 8);\n\n        this.functionSelector = getFunctionSelector(abi);\n        this.injectPromise = utils.promiseInjector(this);\n\n        this.defaultOptions = {\n            feeLimit: 1000000000,\n            callValue: 0,\n            from: this.tronWeb.defaultAddress.hex, // Only used for send()\n            shouldPollResponse: true // Only used for sign()\n        };\n    }\n\n    onMethod(...args) {\n        const types = getParamTypes(this.inputs);\n\n        args.forEach((arg, index) => {\n            if(types[index] == 'address')\n                args[index] = this.tronWeb.address.toHex(arg).replace(/^(41)/, '0x')\n        });\n\n        return {\n            call: (...methodArgs) => this._call(types, args, ...methodArgs),\n            send: (...methodArgs) => this._send(types, args, ...methodArgs),\n            watch: (...methodArgs) => this._watch(...methodArgs)\n        }\n    }\n\n    async _call(types, args, options = {}, callback = false) {                \n        if(utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n            \n        if(!callback)\n            return this.injectPromise(this._call, types, args, options);\n\n        if(types.length !== args.length)\n            return callback('Invalid argument count provided');\n\n        if(!this.contract.address)\n            return callback('Smart contract is missing address');\n\n        if(!this.contract.deployed)\n            return callback('Calling smart contracts requires you to load the contract first');\n\n        const { stateMutability } = this.abi;\n\n        if(![ 'pure', 'view' ].includes(stateMutability.toLowerCase()))\n            return callback(`Methods with state mutability \"${stateMutability}\" must use send()`);\n\n        options = { ...this.defaultOptions, ...options };\n\n        const parameters = args.map((value, index) => ({\n            type: types[index],\n            value\n        }));\n\n        this.tronWeb.transactionBuilder.triggerSmartContract(\n            this.contract.address,\n            this.functionSelector,\n            options.feeLimit,\n            options.callValue,\n            parameters,\n            this.tronWeb.address.toHex(options.from),\n        (err, transaction) => {\n            if(err) \n                return callback(err);\n\n            if(!utils.hasProperty(transaction, 'constant_result'))\n                return callback('Failed to execute');\n\n            try {\n                let output = decodeOutput(this.outputs, '0x' + transaction.constant_result[0]);\n                \n                if(output.length === 1)\n                    output = output[0];\n\n                return callback(null, output);\n            } catch(ex) {\n                return callback(ex);\n            }\n        });\n    }\n\n    async _send(types, args, options = {}, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if(utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if(utils.isFunction(options)) {\n            callback = options;\n            options = {};\n        }\n            \n        if(!callback)\n            return this.injectPromise(this._send, types, args, options, privateKey);\n\n        if(types.length !== args.length)\n            throw new Error('Invalid argument count provided');\n\n        if(!this.contract.address)\n            return callback('Smart contract is missing address');\n\n        if(!this.contract.deployed)\n            return callback('Calling smart contracts requires you to load the contract first');\n\n        if(!privateKey || !utils.isString(privateKey))\n            return callback('Invalid private key provided');\n\n        const { stateMutability } = this.abi;\n\n        if([ 'pure', 'view' ].includes(stateMutability.toLowerCase()))\n                return callback(`Methods with state mutability \"${stateMutability}\" must use call()`);\n\n        options = { ...this.defaultOptions, ...options };\n\n        const parameters = args.map((value, index) => ({\n            type: types[index],\n            value\n        }));\n\n        try {\n            const address = this.tronWeb.address.fromPrivateKey(privateKey);\n            const transaction = await this.tronWeb.transactionBuilder.triggerSmartContract(\n                this.contract.address,\n                this.functionSelector,\n                options.feeLimit,\n                options.callValue,\n                parameters,\n                this.tronWeb.address.toHex(address)\n            );\n\n            if(!transaction.result || !transaction.result.result)\n                return callback('Unknown error: ' + JSON.stringify(transaction, null, 2));\n\n            const signedTransaction = await this.tronWeb.trx.sign(transaction.transaction, privateKey);\n            const broadcast = await this.tronWeb.trx.sendRawTransaction(signedTransaction);\n\n            if(!broadcast.result)\n                return callback('Unknown error: ' + JSON.stringify(broadcast, null, 2));\n\n            if(!options.shouldPollResponse)\n                return callback(null, signedTransaction.txID);\n\n            const checkResult = async (index = 0) => {\n                if(index == 20) {\n                    return callback({ \n                        error: 'Cannot find result in solidity node', \n                        transaction: signedTransaction\n                    });\n                }\n                \n                const output = await this.tronWeb.trx.getTransactionInfo(signedTransaction.txID);\n\n                if(!Object.keys(output).length) {\n                    return setTimeout(() => {\n                        checkResult(index + 1);\n                    }, 3000);\n                }\n\n                if(output.result && output.result == 'FAILED') {\n                    return callback({\n                        error: this.tronWeb.toUtf8(output.resMessage),\n                        transaction: signedTransaction,\n                        output\n                    });\n                }\n\n                if(!utils.hasProperty(output, 'contractResult')) {\n                    return callback({\n                        error: 'Failed to execute: ' + JSON.stringify(output, null, 2),\n                        transaction: signedTransaction,\n                        output\n                    });\n                }\n\n                let decoded = decodeOutput(this.outputs, '0x' + output.contractResult[0]);\n\n                if(decoded.length === 1)\n                    decoded = decoded[0];\n\n                return callback(null, decoded);\n            }\n\n            checkResult();                    \n        } catch(ex) {\n            return callback(ex);\n        }\n    }\n\n    async _watch(callback = false) {\n        if(!utils.isFunction(callback))\n            throw new Error('Expected callback to be provided');\n        \n        if(!this.contract.address)\n            return callback('Smart contract is missing address');\n\n        if(this.abi.type.toLowerCase() !== 'event')\n            return callback('Invalid method type for event watching');\n\n        if(!this.tronWeb.eventServer)\n            return callback('No event server configured');\n\n        let listener = false;\n        let lastBlock = false;\n\n        const getEvents = async () => {\n            try {\n                const events = await this.tronWeb.getEventResult(this.contract.address, this.name);\n                const [ latestEvent ] = events.sort((a, b) => b.block - a.block);\n                const newEvents = events.filter((event, index) => {\n                    const duplicate = events.slice(0, index).some(priorEvent => (\n                        JSON.stringify(priorEvent) == JSON.stringify(event)\n                    ));\n\n                    if(duplicate)\n                        return false;\n\n                    if(!lastBlock)\n                        return true;            \n\n                    return event.block > lastBlock;\n                });\n\n                if(latestEvent)\n                    lastBlock = latestEvent.block;\n\n                return newEvents;\n            } catch(ex) {\n                return Promise.reject(ex);\n            }\n        };\n\n        const bindListener = () => {\n            if(listener)\n                clearInterval(listener);\n\n            listener = setInterval(() => {\n                getEvents().then(events => events.forEach(event => {\n                    callback(null, utils.parseEvent(event, this.abi))\n                })).catch(err => callback(err));\n            }, 3000);\n        };\n\n        await getEvents();\n        bindListener();\n\n        return {\n            start: bindListener(),\n            stop: () => {\n                if(!listener)\n                    return;\n\n                clearInterval(listener);\n                listener = false;\n            }\n        }\n    }\n}\n","import axios from 'axios';\nimport utils from 'utils';\n\nexport default class HttpProvider {\n    constructor(host, timeout = 30000, user = false, password = false, headers = {}, statusPage = '/') {\n        if(!utils.isValidURL(host))\n            throw new Error('Invalid URL provided to HttpProvider');\n\n        if(isNaN(timeout) || timeout < 0)\n            throw new Error('Invalid timeout duration provided');\n\n        if(!utils.isObject(headers))\n            throw new Error('Invalid headers object provided');\n\n        if(host.charAt(host.length - 1) === '/')\n            host = host.substr(0, host.length - 2);\n\n        this.host = host;\n        this.timeout = timeout;\n        this.user = user;\n        this.password = password;\n        this.headers = headers;\n        this.statusPage = statusPage;\n\n        this.instance = axios.create({            \n            baseURL: host,\n            timeout: timeout,\n            headers: headers,\n            auth: user && {\n                user,\n                password\n            },\n        });\n    }\n\n    setStatusPage(statusPage = '/') {\n        this.statusPage = statusPage;\n    }\n\n    async isConnected(statusPage = this.statusPage) {\n        return this.request(statusPage).then(data => {\n            return utils.hasProperties(data, 'blockID', 'block_header');\n        }).catch(() => false);\n    }\n\n    request(url, payload = {}, method = 'get') {\n        method = method.toLowerCase();\n\n        return this.instance.request({\n            data: method == 'post' && payload,\n            params: method =='get' && payload,\n            url,\n            method\n        }).then(({ data }) => data);\n    }\n};","import HttpProvider from './HttpProvider';\n\nexport default {\n    HttpProvider\n};","import TronWeb from 'index';\nimport utils from 'utils';\nimport Ethers from 'ethers';\n\nexport default class TransactionBuilder {\n    constructor(tronWeb = false) {\n        if(!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.injectPromise = utils.promiseInjector(this);\n    }\n\n    sendTrx(to = false, amount = 0, from = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(from)) {\n            callback = from;\n            from = this.tronWeb.defaultAddress.hex;\n        }\n        \n        if(!callback)\n            return this.injectPromise(this.sendTrx, to, amount, from);\n\n        if(!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient address provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!this.tronWeb.isAddress(from))\n            return callback('Invalid origin address provided');\n\n        to = this.tronWeb.address.toHex(to);\n        from = this.tronWeb.address.toHex(from);\n\n        if(to === from)\n            return callback('Cannot transfer TRX to the same account');\n\n        this.tronWeb.fullNode.request('wallet/createtransaction', {\n            to_address: to,\n            owner_address: from,\n            amount: parseInt(amount)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    sendToken(to = false, amount = 0, tokenID = false, from = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(from)) {\n            callback = from;\n            from = this.tronWeb.defaultAddress.hex;\n        }\n        \n        if(!callback)\n            return this.injectPromise(this.sendToken, to, amount, tokenID, from);\n\n        if(!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient address provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        if(!this.tronWeb.isAddress(from))\n            return callback('Invalid origin address provided');\n\n        to = this.tronWeb.address.toHex(to);\n        tokenID = this.tronWeb.fromUtf8(tokenID);\n        from = this.tronWeb.address.toHex(from);\n\n        if(to === from)\n            return callback('Cannot transfer tokens to the same account');\n\n        this.tronWeb.fullNode.request('wallet/transferasset', {\n            to_address: to,\n            owner_address: from,\n            asset_name: tokenID,\n            amount: parseInt(amount)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    purchaseToken(issuerAddress = false, tokenID = false, amount = 0, buyer = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(buyer)) {\n            callback = buyer;\n            buyer = this.tronWeb.defaultAddress.hex;\n        }\n        \n        if(!callback)\n            return this.injectPromise(this.purchaseToken, issuerAddress, tokenID, amount, buyer);\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        if(!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!this.tronWeb.isAddress(buyer))\n            return callback('Invalid buyer address provided');\n\n        this.tronWeb.fullNode.request('wallet/participateassetissue', {\n            to_address: this.tronWeb.address.toHex(issuerAddress),\n            owner_address: this.tronWeb.address.toHex(buyer),\n            asset_name: this.tronWeb.fromUtf8(tokenID),\n            amount: parseInt(amount)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    freezeBalance(address = this.tronWeb.defaultAddress.hex, amount = 0, duration = 3, resource = \"BANDWIDTH\", callback = false) {\n        if(utils.isFunction(duration)) {\n            callback = duration;\n            duration = 3;\n        }\n\n        if(utils.isFunction(resource)) {\n            callback = resource;\n            resource = \"BANDWIDTH\";\n        }\n            \n        if(!callback)\n            return this.injectPromise(this.freezeBalance, address, amount, duration, resource);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!utils.isInteger(duration) || duration < 3)\n            return callback('Invalid duration provided, minimum of 3 days');\n\n        this.tronWeb.fullNode.request('wallet/freezebalance', {\n            owner_address: this.tronWeb.address.toHex(address),\n            frozen_balance: parseInt(amount),\n            frozen_duration: parseInt(duration),\n            resource: resource\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    unfreezeBalance(address = this.tronWeb.defaultAddress.hex, resource = \"BANDWIDTH\", callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(utils.isFunction(resource)) {\n            callback = resource;\n            resource = \"BANDWIDTH\";\n        }\n\n        if(!callback)\n            return this.injectPromise(this.unfreezeBalance, address, resource);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n        \n        this.tronWeb.fullNode.request('wallet/unfreezebalance', {\n            owner_address: this.tronWeb.address.toHex(address),\n            resource: resource\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    withdrawBlockRewards(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.withdrawBlockRewards, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n        \n        this.tronWeb.fullNode.request('wallet/withdrawbalance', {\n            owner_address: this.tronWeb.address.toHex(address)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    applyForSR(address = this.tronWeb.defaultAddress.hex, url = false, callback = false) {\n        if(utils.isValidURL(address)) {\n            callback = url || false;\n            url = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.applyForSR, address, url);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        if(!utils.isValidURL(url))\n            return callback('Invalid url provided');\n        \n        this.tronWeb.fullNode.request('wallet/createwitness', {\n            owner_address: this.tronWeb.address.toHex(address),\n            url: this.tronWeb.fromUtf8(url)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    vote(votes = {}, voterAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(voterAddress)) {\n            callback = voterAddress;\n            voterAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.vote, votes, voterAddress);\n\n        if(!utils.isObject(votes) || !Object.keys(votes).length)\n            return callback('Invalid votes object provided');\n\n        if(!this.tronWeb.isAddress(voterAddress))\n            return callback('Invalid voter address provided');\n\n        let invalid = false;\n\n        votes = Object.entries(votes).map(([ srAddress, voteCount ]) => {\n            if(invalid)\n                return;\n\n            if(!this.tronWeb.isAddress(srAddress)) {\n                callback('Invalid SR address provided: ' + srAddress);\n                return invalid = true;\n            }\n\n            if(!utils.isInteger(voteCount) || voteCount <= 0) {\n                callback('Invalid vote count provided for SR: ' + srAddress);\n                return invalid = true;\n            }\n\n            return {\n                vote_address: this.tronWeb.address.toHex(srAddress),\n                vote_count: parseInt(voteCount)\n            };\n        });\n\n        if(invalid)\n            return;\n\n        this.tronWeb.fullNode.request('wallet/votewitnessaccount', {\n            owner_address: this.tronWeb.address.toHex(voterAddress),\n            votes\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    createSmartContract(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.createSmartContract, options, issuerAddress);\n\n        let {\n            abi = false,\n            bytecode = false,\n            feeLimit = 1_000_000_000,\n            callValue = 0,\n            userFeePercentage = 0,\n            parameters = []\n        } = options;\n\n        if(abi && utils.isString(abi)) {\n            try {\n                abi = JSON.parse(abi);\n            } catch{\n                return callback('Invalid options.abi provided');\n            }\n        }\n\n        if(!utils.isArray(abi))\n            return callback('Invalid options.abi provided');\n\n        const payable = abi.some(func => {\n            return func.type == 'constructor' && func.payable;\n        });\n\n        if(!utils.isHex(bytecode))\n            return callback('Invalid options.bytecode provided');\n\n        if(!utils.isInteger(feeLimit) || feeLimit <= 0 || feeLimit > 1_000_000_000)\n            return callback('Invalid options.feeLimit provided');\n\n        if(!utils.isInteger(callValue) || callValue < 0)\n            return callback('Invalid options.callValue provided');\n\n        if(payable && callValue == 0)\n            return callback('When contract is payable, options.callValue must be a positive integer');\n\n        if(!payable && callValue > 0)\n            return callback('When contract is not payable, options.callValue must be 0');\n\n        if(!utils.isInteger(userFeePercentage) || userFeePercentage < 0 || userFeePercentage > 100)\n            return callback('Invalid options.userFeePercentage provided');\n\n        if(!utils.isArray(parameters))\n            return callback('Invalid parameters provided');\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        if(parameters.length) {\n            const abiCoder = new Ethers.utils.AbiCoder();\n            const types = [];\n            const values = [];\n\n            for(let i = 0; i < parameters.length; i++) {\n                let { type, value } = parameters[i];\n\n                if(!type || !utils.isString(type) || !type.length)\n                    return callback('Invalid parameter type provided: ' + type);\n\n                if(type == 'address')\n                    value = this.tronWeb.address.toHex(value).replace(/^(41)/, '0x');\n                    \n                types.push(type);\n                values.push(value);\n            }\n\n            try {\n                parameters = abiCoder.encode(types, values).replace(/^(0x)/, '');\n            } catch (ex) {\n                return callback(ex);\n            }\n        } else parameters = '';\n\n        this.tronWeb.fullNode.request('wallet/deploycontract', {\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            fee_limit: parseInt(feeLimit),\n            call_value: parseInt(callValue),\n            consume_user_resource_percent: userFeePercentage,\n            abi: JSON.stringify(abi),\n            bytecode,\n            parameter: parameters\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    triggerSmartContract(\n        contractAddress, \n        functionSelector,\n        feeLimit = 1_000_000_000,\n        callValue = 0,\n        parameters = [], \n        issuerAddress = this.tronWeb.defaultAddress.hex, \n        callback = false\n    ) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(utils.isFunction(parameters)) {\n            callback = parameters;\n            parameters = [];\n        }\n\n        if(utils.isFunction(callValue)) {\n            callback = callValue;\n            callValue = 0;\n        }\n\n        if(utils.isFunction(feeLimit)) {\n            callback = feeLimit;\n            feeLimit = 1_000_000_000;\n        }\n\n        if(!callback) {\n            return this.injectPromise(\n                this.triggerSmartContract, \n                contractAddress, \n                functionSelector, \n                feeLimit,\n                callValue, \n                parameters,\n                issuerAddress\n            );\n        }\n\n        if(!this.tronWeb.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        if(!utils.isString(functionSelector) || !functionSelector.length)\n            return callback('Invalid function selector provided');\n\n        if(!utils.isInteger(callValue) || callValue < 0)\n            return callback('Invalid call value provided');\n\n        if(!utils.isInteger(feeLimit) || feeLimit <= 0 || feeLimit > 1_000_000_000)\n            return callback('Invalid fee limit provided');\n\n        if(!utils.isArray(parameters))\n            return callback('Invalid parameters provided');\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        functionSelector = functionSelector.replace('/\\s*/g', '');\n\n        if(parameters.length) {\n            const abiCoder = new Ethers.utils.AbiCoder();\n            const types = [];\n            const values = [];\n\n            for(let i = 0; i < parameters.length; i++) {\n                let { type, value } = parameters[i];\n\n                if(!type || !utils.isString(type) || !type.length)\n                    return callback('Invalid parameter type provided: ' + type);\n\n                if(type == 'address')\n                    value = this.tronWeb.address.toHex(value).replace(/^(41)/, '0x');\n                    \n                types.push(type);\n                values.push(value);\n            }\n\n            try {\n                parameters = abiCoder.encode(types, values).replace(/^(0x)/, '');\n            } catch (ex) {\n                return callback(ex);\n            }\n        } else parameters = '';\n\n        this.tronWeb.fullNode.request('wallet/triggersmartcontract', {\n            contract_address: this.tronWeb.address.toHex(contractAddress),\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            function_selector: functionSelector,\n            fee_limit: parseInt(feeLimit),\n            call_value: parseInt(callValue),\n            parameter: parameters\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            if(!transaction.result.result)\n                return callback(transaction);\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    createToken(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.createToken, options, issuerAddress);\n\n        const {\n            name = false,\n            abbreviation = false,\n            description = false,\n            url = false,\n            totalSupply = 0,\n            trxRatio = 1, // How much TRX will `tokenRatio` cost?\n            tokenRatio = 1, // How many tokens will `trxRatio` afford?\n            saleStart = Date.now(),\n            saleEnd = false,            \n            freeBandwidth = 0, // The creator's \"donated\" bandwidth for use by token holders\n            freeBandwidthLimit = 0, // Out of `totalFreeBandwidth`, the amount each token holder get\n            frozenAmount = 0,\n            frozenDuration = 0\n        } = options;\n\n        if(!utils.isString(name) || !name.length)\n            return callback('Invalid token name provided');\n\n        if(!utils.isString(abbreviation) || !abbreviation.length)\n            return callback('Invalid token abbreviation provided');\n\n        if(!utils.isInteger(totalSupply) || totalSupply <= 0)\n            return callback('Invalid supply amount provided');\n\n        if(!utils.isInteger(trxRatio) || trxRatio <= 0)\n            return callback('TRX ratio must be a positive integer');\n\n        if(!utils.isInteger(tokenRatio) || tokenRatio <= 0)\n            return callback('Token ratio must be a positive integer');\n\n        if(!utils.isInteger(saleStart) || saleStart < Date.now())\n            return callback('Invalid sale start timestamp provided');\n\n        if(!utils.isInteger(saleEnd) || saleEnd <= saleStart)\n            return callback('Invalid sale end timestamp provided');\n\n        if(!utils.isString(description) || !description.length)\n            return callback('Invalid token description provided');\n\n        if(!utils.isString(url) || !url.length || !utils.isValidURL(url))\n            return callback('Invalid token url provided');\n\n        if(!utils.isInteger(freeBandwidth) || freeBandwidth < 0)\n            return callback('Invalid free bandwidth amount provided');\n\n        if(!utils.isInteger(freeBandwidthLimit) || freeBandwidthLimit < 0 || (freeBandwidth && !freeBandwidthLimit))\n            return callback('Invalid free bandwidth limit provided');\n\n        if(!utils.isInteger(frozenAmount) || frozenAmount < 0 || (!frozenDuration && frozenAmount))\n            return callback('Invalid frozen supply provided');\n\n        if(!utils.isInteger(frozenDuration) || frozenDuration < 0 || (frozenDuration && !frozenAmount))\n            return callback('Invalid frozen duration provided');\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        this.tronWeb.fullNode.request('wallet/createassetissue', {\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            name: this.tronWeb.fromUtf8(name),\n            abbr: this.tronWeb.fromUtf8(abbreviation),\n            description: this.tronWeb.fromUtf8(description),\n            url: this.tronWeb.fromUtf8(url),\n            total_supply: parseInt(totalSupply),\n            trx_num: parseInt(trxRatio),\n            num: parseInt(tokenRatio),\n            start_time: parseInt(saleStart),\n            end_time: parseInt(saleEnd),\n            free_asset_net_limit: parseInt(freeBandwidth),\n            public_free_asset_net_limit: parseInt(freeBandwidthLimit),\n            frozen_supply: {\n                frozen_amount: parseInt(frozenAmount),\n                frozen_days: parseInt(frozenDuration)\n            }\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    updateToken(options = {}, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.updateToken, options, issuerAddress);\n\n        const {\n            description = false,\n            url = false,\n            freeBandwidth = 0, // The creator's \"donated\" bandwidth for use by token holders\n            freeBandwidthLimit = 0 // Out of `totalFreeBandwidth`, the amount each token holder get\n        } = options;\n\n        if(!utils.isInteger(freeBandwidth) || freeBandwidth < 0)\n            return callback('Invalid free bandwidth amount provided');\n\n        if(!utils.isInteger(freeBandwidthLimit) || freeBandwidthLimit < 0 || (freeBandwidth && !freeBandwidthLimit))\n            return callback('Invalid free bandwidth limit provided');\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuer address provided');\n\n        this.tronWeb.fullNode.request('wallet/updateasset', {\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            description: this.tronWeb.fromUtf8(description),\n            url: this.tronWeb.fromUtf8(url),\n            new_limit: parseInt(freeBandwidth),\n            new_public_limit: parseInt(freeBandwidthLimit)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    sendAsset(...args) {\n        return this.sendToken(...args);\n    }\n\n    purchaseAsset(...args) {\n        return this.purchaseToken(...args);\n    }\n\n    createAsset(...args) {\n        return this.createToken(...args);\n    }\n\n    updateAsset(...args) {\n        return this.updateToken(...args);\n    }\n\n    /**\n     * Creates a proposal to modify the network.\n     * Can only be created by a current Super Representative.\n     */\n    createProposal(parameters = false, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!parameters)\n            return callback('Invalid proposal parameters provided');\n\n        if(!callback)\n            return this.injectPromise(this.createProposal, parameters, issuerAddress);\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuerAddress provided');\n\n        if(!utils.isObject(parameters))\n            return callback('Invalid parameters provided');\n\n        this.tronWeb.fullNode.request('wallet/proposalcreate', {\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            parameters: parameters\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Deletes a network modification proposal that the owner issued.\n     * Only current Super Representative can vote on a proposal.\n     */\n    deleteProposal(proposalID = false, issuerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(issuerAddress)) {\n            callback = issuerAddress;\n            issuerAddress = this.tronWeb.defaultAddress.hex;\n        }\n        \n        if(!callback)\n            return this.injectPromise(this.deleteProposal, proposalID, issuerAddress);\n\n        if(!this.tronWeb.isAddress(issuerAddress))\n            return callback('Invalid issuerAddress provided');\n\n        if(!utils.isInteger(proposalID) || proposalID < 0)\n            return callback('Invalid proposalID provided');\n\n        this.tronWeb.fullNode.request('wallet/proposaldelete', {\n            owner_address: this.tronWeb.address.toHex(issuerAddress),\n            proposal_id: parseInt(proposalID)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Adds a vote to an issued network modification proposal.\n     * Only current Super Representative can vote on a proposal.\n     */\n    voteProposal(proposalID = false, hasApproval = false, voterAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(voterAddress)) {\n            callback = voterAddress;\n            voterAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.voteProposal, proposalID, hasApproval, voterAddress);\n\n        if(!this.tronWeb.isAddress(voterAddress))\n            return callback('Invalid voterAddress address provided');\n\n        if(!utils.isInteger(proposalID) || proposalID < 0)\n            return callback('Invalid proposalID provided');\n\n        if(!utils.isBoolean(hasApproval))\n            return callback('Invalid hasApproval provided');\n\n        this.tronWeb.fullNode.request('wallet/proposalapprove', {\n            owner_address: this.tronWeb.address.toHex(voterAddress),\n            proposal_id: parseInt(proposalID),\n            is_add_approval: isApproval.toString()\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Adds tokens into a bancor style exchange.\n     */\n    injectExchangeTokens(exchangeID = false, tokenName = false, tokenAmount = 0, ownerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.injectExchangeTokens, exchangeID, tokenName, tokenAmount, ownerAddress);\n\n        if(!this.tronWeb.isAddress(ownerAddress))\n            return callback('Invalid ownerAddress provided');\n\n        if(!utils.isInteger(exchangeID) || exchangeID < 0)\n            return callback('Invalid exchangeID provided');\n\n        if(!utils.isString(tokenName) || !tokenName.length)\n            return callback('Invalid tokenName provided');\n\n        if(!utils.isInteger(tokenAmount) || tokenAmount < 1)\n            return callback('Invalid tokenAmount provided');\n\n        this.tronWeb.fullNode.request('wallet/exchangeinject', {\n            owner_address: this.tronWeb.address.toHex(ownerAddress),\n            exchange_id: parseInt(exchangeID),\n            token_id: this.tronWeb.fromAscii(tokenName),\n            quant:parseInt(tokenAmount)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Withdraws tokens from a bancor style exchange.\n     */\n    withdrawExchangeTokens(exchangeID = false, tokenName = false, tokenAmount = 0, ownerAddress = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.withdrawExchangeTokens, exchangeID, tokenName, tokenAmount, ownerAddress);\n\n        if(!this.tronWeb.isAddress(ownerAddress))\n            return callback('Invalid ownerAddress provided');\n\n        if(!utils.isInteger(exchangeID) || exchangeID < 0)\n            return callback('Invalid exchangeID provided');\n\n        if(!utils.isString(tokenName) || !tokenName.length)\n            return callback('Invalid tokenName provided');\n\n        if(!utils.isInteger(tokenAmount) || tokenAmount < 1)\n            return callback('Invalid tokenAmount provided');\n\n        this.tronWeb.fullNode.request('wallet/exchangewithdraw', {\n            owner_address: this.tronWeb.address.toHex(ownerAddress),\n            exchange_id: parseInt(exchangeID),\n            token_id: this.tronWeb.fromAscii(tokenName),\n            quant:parseInt(tokenAmount)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Trade tokens on a bancor style exchange.\n     */\n    tradeExchangeTokens(exchangeID = false, \n        tokenName = false, \n        tokenAmountSold = 0, \n        tokenAmountExpected = 0, \n        ownerAddress = this.tronWeb.defaultAddress.hex, \n        callback = false) {\n        if(utils.isFunction(ownerAddress)) {\n            callback = ownerAddress;\n            ownerAddress = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.tradeExchangeTokens, exchangeID, tokenName, tokenAmountSold, tokenAmountExpected, ownerAddress);\n\n        if(!this.tronWeb.isAddress(ownerAddress))\n            return callback('Invalid ownerAddress provided');\n\n        if(!utils.isInteger(exchangeID) || exchangeID < 0)\n            return callback('Invalid exchangeID provided');\n\n        if(!utils.isString(tokenName) || !tokenName.length)\n            return callback('Invalid tokenName provided');\n\n        if(!utils.isInteger(tokenAmountSold) || tokenAmountSold < 1)\n            return callback('Invalid tokenAmountSold provided');\n\n        if(!utils.isInteger(tokenAmountExpected) || tokenAmountExpected < 1)\n            return callback('Invalid tokenAmountExpected provided');\n\n        this.tronWeb.fullNode.request('wallet/exchangewithdraw', {\n            owner_address: this.tronWeb.address.toHex(ownerAddress),\n            exchange_id: parseInt(exchangeID),\n            token_id: this.tronWeb.fromAscii(tokenName),\n            quant:parseInt(tokenAmountSold),\n            expected:parseInt(tokenAmountExpected)\n        }, 'post').then(transaction => {\n            if(transaction.Error)\n                return callback(transaction.Error);\n\n            if(transaction.result && transaction.result.message) {\n                return callback(\n                    this.tronWeb.toUtf8(transaction.result.message)\n                );\n            }\n\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n}\n","import TronWeb from 'index';\nimport utils from 'utils';\n\nexport default class Trx {\n    constructor(tronWeb = false) {\n        if(!tronWeb || !tronWeb instanceof TronWeb)\n            throw new Error('Expected instance of TronWeb');\n\n        this.tronWeb = tronWeb;\n        this.injectPromise = utils.promiseInjector(this);\n    }\n\n    parseToken(token) {\n        return {\n            ...token,\n            name: this.tronWeb.toUtf8(token.name),\n            abbr: token.abbr && this.tronWeb.toUtf8(token.abbr),\n            description: token.description && this.tronWeb.toUtf8(token.description),\n            url: token.url && this.tronWeb.toUtf8(token.url)\n        };\n    }\n\n    getCurrentBlock(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getCurrentBlock);\n\n        this.tronWeb.fullNode.request('wallet/getnowblock').then(block => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlock(block = this.tronWeb.defaultBlock, callback = false) {\n        if(utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBlock, block);\n\n        if(block === false)\n            return callback('No block identifier provided');\n\n        if(block == 'earliest')\n            block = 0;\n\n        if(block == 'latest')\n            return this.getCurrentBlock(callback);\n\n        if(isNaN(block) && utils.isHex(block))\n            return this.getBlockByHash(block, callback);\n\n        this.getBlockByNumber(block, callback);\n    }\n\n    getBlockByHash(blockHash, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getBlockByHash, blockHash);\n\n        this.tronWeb.fullNode.request('wallet/getblockbyid', { \n            value: blockHash \n        }, 'post').then(block => {\n            if(!Object.keys(block).length)\n                return callback('Block not found');\n\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlockByNumber(blockID, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getBlockByNumber, blockID);\n\n        if(!utils.isInteger(blockID) || blockID < 0)\n            return callback('Invalid block number provided');\n\n        this.tronWeb.fullNode.request('wallet/getblockbynum', { \n            num: parseInt(blockID) \n        }, 'post').then(block => {\n            if(!Object.keys(block).length)\n                return callback('Block not found');\n\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    getBlockTransactionCount(block = this.tronWeb.defaultBlock, callback = false) {\n        if(utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBlockTransactionCount, block);\n\n        this.getBlock(block).then(({ transactions = [] }) => {\n            callback(null, transactions.length);\n        }).catch(err => callback(err));\n    }\n\n    getTransactionFromBlock(block = this.tronWeb.defaultBlock, index = 0, callback = false) {\n        if(utils.isFunction(index)) {\n            callback = index;\n            index = 0;\n        }\n        \n        if(utils.isFunction(block)) {\n            callback = block;\n            block = this.tronWeb.defaultBlock;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTransactionFromBlock, block, index);\n\n        if(!utils.isInteger(index) || index < 0)\n            return callback('Invalid transaction index provided');\n\n        this.getBlock(block).then(({ transactions = false }) => {\n            if(!transactions || transactions.length < index)\n                return callback('Transaction not found in block');\n\n            callback(null, transactions[index]);\n        }).catch(err => callback(err));\n    }\n\n    getTransaction(transactionID, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getTransaction, transactionID);\n\n        this.tronWeb.fullNode.request('wallet/gettransactionbyid', { \n            value: transactionID \n        }, 'post').then(transaction => {\n            if(!Object.keys(transaction).length)\n                return callback('Transaction not found');\n                \n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getTransactionInfo(transactionID, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getTransactionInfo, transactionID);\n\n        this.tronWeb.solidityNode.request('walletsolidity/gettransactioninfobyid', { \n            value: transactionID \n        }, 'post').then(transaction => {\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getTransactionsToAddress(address = this.tronWeb.defaultAddress.hex, limit = 30, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;            \n        }\n\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;          \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTransactionsToAddress, address, limit, offset);\n\n        return this.getTransactionsRelated(address, 'to', limit, offset, callback);\n    }\n\n    getTransactionsFromAddress(address = this.tronWeb.defaultAddress.hex, limit = 30, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;            \n        }\n\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;           \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTransactionsFromAddress, address, limit, offset);\n\n        return this.getTransactionsRelated(address, 'from', limit, offset, callback);\n    }\n\n    async getTransactionsRelated(address = this.tronWeb.defaultAddress.hex, direction = 'all', limit = 30, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;            \n        }\n\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 30;         \n        }\n\n        if(utils.isFunction(direction)) {\n            callback = direction;\n            direction = 'all';\n        }\n\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTransactionsRelated, address, direction, limit, offset);\n\n        if(![ 'to', 'from', 'all' ].includes(direction))\n            return callback('Invalid direction provided: Expected \"to\", \"from\" or \"all\"');\n        \n        if(direction == 'all') {\n            try {\n                const from = await this.getTransactionsRelated(address, 'from', limit, offset);\n                const to = await this.getTransactionsRelated(address, 'to', limit, offset);\n\n                return callback(null, [\n                    ...from.map(tx => (tx.direction = 'from', tx)),\n                    ...to.map(tx => (tx.direction = 'to', tx))\n                ].sort((a, b) => b.raw_data.timestamp - a.raw_data.timestamp));\n            } catch(ex) {\n                return callback(ex);\n            }\n        }\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        if(!utils.isInteger(limit) || limit < 0 || (offset && limit < 1))\n            return callback('Invalid limit provided');\n\n        if(!utils.isInteger(offset) || offset < 0)\n            return callback('Invalid offset provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.solidityNode.request(`walletextension/gettransactions${direction}this`, {\n            account: {\n                address\n            },\n            offset,\n            limit\n        }, 'post').then(({ transaction }) => {\n            callback(null, transaction);\n        }).catch(err => callback(err));\n    }\n\n    getAccount(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getAccount, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.solidityNode.request('walletsolidity/getaccount', {\n            address\n        }, 'post').then(account => {\n            callback(null, account);\n        }).catch(err => callback(err));\n    }\n\n    getBalance(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBalance, address);\n\n        this.getAccount(address).then(({ balance = 0 }) => {\n            callback(null, balance);\n        }).catch(err => callback(err));\n    }\n\n    getBandwidth(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBandwidth, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getaccountnet', {\n            address\n        }, 'post').then(({ freeNetUsed = 0, freeNetLimit = 0, NetUsed = 0, NetLimit = 0 }) => {\n            callback(null, (freeNetLimit - freeNetUsed) + (NetLimit - NetUsed));\n        }).catch(err => callback(err));\n    }\n\n    getTokensIssuedByAddress(address = this.tronWeb.defaultAddress.hex, callback = false) {\n        if(utils.isFunction(address)) {\n            callback = address;\n            address = this.tronWeb.defaultAddress.hex;            \n        }\n\n        if(!callback)\n            return this.injectPromise(this.getTokensIssuedByAddress, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        address = this.tronWeb.address.toHex(address);\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyaccount', {\n            address\n        }, 'post').then(({ assetIssue = false }) => {\n            if(!assetIssue)\n                return callback(null, {});\n\n            const tokens = assetIssue.map(token => {\n                return this.parseToken(token);\n            }).reduce((tokens, token) => {\n                return tokens[token.name] = token, tokens;\n            }, {});\n\n            callback(null, tokens);\n        }).catch(err => callback(err));\n    }\n\n    getTokenFromID(tokenID = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getTokenFromID, tokenID);\n\n        if(!utils.isString(tokenID) || !tokenID.length)\n            return callback('Invalid token ID provided');\n\n        this.tronWeb.fullNode.request('wallet/getassetissuebyname', {\n            value: this.tronWeb.fromUtf8(tokenID)\n        }, 'post').then(token => {\n            if(!token.name)\n                return callback('Token does not exist');\n                \n            callback(null, this.parseToken(token));\n        }).catch(err => callback(err));\n    }\n\n    listNodes(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.listNodes);\n\n        this.tronWeb.fullNode.request('wallet/listnodes').then(({ nodes = [] }) => {\n            callback(null, nodes.map(({ address: { host, port } }) => (\n                `${this.tronWeb.toUtf8(host)}:${port}`\n            )));\n        }).catch(err => callback(err));\n    }\n\n    getBlockRange(start = 0, end = 30, callback = false) {\n        if(utils.isFunction(end)) {\n            callback = end;\n            end = 30;            \n        }\n\n        if(utils.isFunction(start)) {\n            callback = start;\n            start = 0;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.getBlockRange, start, end);\n\n        if(!utils.isInteger(start) || start < 0)\n            return callback('Invalid start of range provided');\n\n        if(!utils.isInteger(end) || end <= start)\n            return callback('Invalid end of range provided');\n\n        this.tronWeb.fullNode.request('wallet/getblockbylimitnext', { \n            startNum: parseInt(start),\n            endNum: parseInt(end) + 1\n        }, 'post').then(({ block = [] }) => {\n            callback(null, block);\n        }).catch(err => callback(err));\n    }\n\n    listSuperRepresentatives(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.listSuperRepresentatives);\n\n        this.tronWeb.fullNode.request('wallet/listwitnesses').then(({ witnesses = [] }) => {\n            callback(null, witnesses);\n        }).catch(err => callback(err));\n    }\n\n    listTokens(limit = 0, offset = 0, callback = false) {\n        if(utils.isFunction(offset)) {\n            callback = offset;\n            offset = 0;            \n        }\n\n        if(utils.isFunction(limit)) {\n            callback = limit;\n            limit = 0;  \n        }\n        \n        if(!callback)\n            return this.injectPromise(this.listTokens, limit, offset);\n\n        if(!utils.isInteger(limit) || limit < 0 || (offset && limit < 1))\n            return callback('Invalid limit provided');\n\n        if(!utils.isInteger(offset) || offset < 0)\n            return callback('Invalid offset provided');\n\n        if(!limit) {\n            return this.tronWeb.fullNode.request('wallet/getassetissuelist').then(({ assetIssue = [] }) => {\n                callback(null, assetIssue.map(token => this.parseToken(token)));\n            }).catch(err => callback(err));\n        }\n\n        this.tronWeb.fullNode.request('wallet/getpaginatedassetissuelist', {\n            offset: parseInt(offset),\n            limit: parseInt(limit)\n        }, 'post').then(({ assetIssue = [] }) => {\n            callback(null, assetIssue.map(token => this.parseToken(token)));\n        }).catch(err => callback(err));\n    }\n\n    timeUntilNextVoteCycle(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.timeUntilNextVoteCycle);\n\n        this.tronWeb.fullNode.request('wallet/getnextmaintenancetime').then(({ num = -1 }) => {\n            if(num == -1)\n                return callback('Failed to get time until next vote cycle');\n\n            callback(null, Math.floor(num / 1000));\n        }).catch(err => callback(err));\n    }\n\n    getContract(contractAddress, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getContract, contractAddress);\n\n        if(!this.tronWeb.isAddress(contractAddress))\n            return callback('Invalid contract address provided');\n\n        contractAddress = this.tronWeb.address.toHex(contractAddress);\n\n        this.tronWeb.fullNode.request('wallet/getcontract', {\n            value: contractAddress\n        }).then(contract => {\n            if(contract.Error)\n                return callback('Contract does not exist');\n\n            callback(null, contract);\n        }).catch(err => callback(err));\n    }\n\n    sign(transaction = false, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if(utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.sign, transaction, privateKey);\n\n        if(!utils.isObject(transaction))\n            return callback('Invalid transaction provided');\n\n        if(transaction.signature)\n            return callback('Transaction is already signed');\n\n        try {\n            const address = this.tronWeb.address.toHex(\n                this.tronWeb.address.fromPrivateKey(privateKey)\n            ).toLowerCase();\n\n            if(address !== transaction.raw_data.contract[0].parameter.value.owner_address.toLowerCase())\n                return callback('Private key does not match address in transaction');\n\n            return callback(null,\n                utils.crypto.signTransaction(privateKey, transaction)\n            );\n        } catch(ex) {\n            callback(ex);\n        }\n    }\n\n    sendRawTransaction(signedTransaction = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.sendRawTransaction, signedTransaction);\n\n        if(!utils.isObject(signedTransaction))\n            return callback('Invalid transaction provided');\n\n        if(!signedTransaction.signature || !utils.isArray(signedTransaction.signature))\n            return callback('Transaction is not signed');\n\n        this.tronWeb.fullNode.request(\n            'wallet/broadcasttransaction', \n            signedTransaction,\n            'post'\n        ).then(result => {\n            callback(null, result);\n        }).catch(err => callback(err));\n    }\n\n    async sendTransaction(to = false, amount = false, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if(utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.sendTransaction, to, amount, privateKey);\n\n        if(!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        try {\n            const address = this.tronWeb.address.fromPrivateKey(privateKey);\n            const transaction = await this.tronWeb.transactionBuilder.sendTrx(to, amount, address);\n            const signedTransaction = await this.sign(transaction, privateKey);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch(ex) {\n            return callback(ex);\n        }\n    }\n\n    async sendToken(to = false, amount = false, tokenID = false, privateKey = this.tronWeb.defaultPrivateKey, callback = false) {\n        if(utils.isFunction(privateKey)) {\n            callback = privateKey;\n            privateKey = this.tronWeb.defaultPrivateKey;\n        }\n\n        if(!callback)\n            return this.injectPromise(this.sendToken, to, amount, tokenID, privateKey);\n\n        if(!this.tronWeb.isAddress(to))\n            return callback('Invalid recipient provided');\n\n        if(!utils.isInteger(amount) || amount <= 0)\n            return callback('Invalid amount provided');\n\n        if(!utils.isString(tokenID))\n            return callback('Invalid token ID provided');\n\n        try {\n            const address = this.tronWeb.address.fromPrivateKey(privateKey);\n            const transaction = await this.tronWeb.transactionBuilder.sendToken(to, amount, tokenID, address);\n            const signedTransaction = await this.sign(transaction, privateKey);\n            const result = await this.sendRawTransaction(signedTransaction);\n\n            return callback(null, result);\n        } catch(ex) {\n            return callback(ex);\n        }\n    }\n\n    sendAsset(...args) {\n        return this.sendToken(...args);\n    }\n\n    send(...args) {\n        return this.sendTransaction(...args);\n    }\n\n    sendTrx(...args) {\n        return this.sendTransaction(...args);\n    }\n\n    broadcast(...args) {\n        return this.sendRawTransaction(...args);\n    }\n\n    signTransaction(...args) {\n        return this.sign(...args);\n    }\n\n    /**\n     * Gets a network modification proposal by ID.\n     */\n    getProposal(proposalID = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getProposal, proposalID);\n\n        if(!utils.isInteger(proposalID) || proposalID < 0)\n            return callback('Invalid proposalID provided');\n\n        this.tronWeb.fullNode.request('wallet/getproposalbyid', { \n            id: parseInt(proposalID),\n        }, 'post').then(proposal => {\n            callback(null, proposal);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Lists all network modification proposals.\n     */\n    listProposals(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.listProposals);\n\n        this.tronWeb.fullNode.request('wallet/listproposals', {}, 'post').then(({ proposals = [] }) => {\n            callback(null, proposals);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Lists all parameters available for network modification proposals.\n     */\n    getChainParameters(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getChainParameters);\n\n        this.tronWeb.fullNode.request('wallet/getchainparameters', {}, 'post').then(({ chainParameter = [] }) => {\n            callback(null, chainParameter);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Lists all network modification proposals.\n     */\n    getAccountResources(address = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getAccountResources, address);\n\n        if(!this.tronWeb.isAddress(address))\n            return callback('Invalid address provided');\n\n        this.tronWeb.fullNode.request('wallet/getaccountresource', { \n            address: this.tronWeb.address.toHex(address),\n        }, 'post').then(resources => {\n            callback(null, resources);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Lists all network modification proposals.\n     */\n    getExchangeByID(exchangeID = false, callback = false) {\n        if(!callback)\n            return this.injectPromise(this.getExchangeByID, address);\n\n        if(!utils.isInteger(exchangeID) || exchangeID < 0)\n            return callback('Invalid exchangeID provided');\n\n        this.tronWeb.fullNode.request('wallet/getexchangebyid', { \n            address: this.tronWeb.address.toHex(address),\n        }, 'post').then(exchange => {\n            callback(null, exchange);\n        }).catch(err => callback(err));\n    }\n\n    /**\n     * Lists all network modification proposals.\n     */\n    listExchanges(callback = false) {\n        if(!callback)\n            return this.injectPromise(this.listExchanges);\n\n        this.tronWeb.fullNode.request('wallet/listexchanges', {}, 'post').then(({ exchanges = [] }) => {\n            callback(null, resources);\n        }).catch(err => callback(err));\n    }\n};","export default class Witness {\n    \n}","import { byteArray2hexStr } from './bytes';\nimport { \n    getBase58CheckAddress,\n    genPriKey,\n    getAddressFromPriKey,\n    getPubKeyFromPriKey\n} from './crypto';\n\nexport function generateAccount() {\n    const priKeyBytes = genPriKey();\n    const pubKeyBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = getAddressFromPriKey(priKeyBytes);\n    \n    const privateKey = byteArray2hexStr(priKeyBytes);\n    const publicKey = byteArray2hexStr(pubKeyBytes);\n\n    return {\n        privateKey,\n        publicKey,\n        address: {\n            base58: getBase58CheckAddress(addressBytes),\n            hex: byteArray2hexStr(addressBytes)\n        }\n    }\n}","const isTestNet = process.env.NET === 'testnet';\n\nexport const ADDRESS_SIZE = isTestNet ? 35 : 34;\nexport const ADDRESS_PREFIX = isTestNet ? \"a0\" : \"41\";\nexport const ADDRESS_PREFIX_BYTE = isTestNet ? 0xa0 : 0x41;\n","const ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\nconst ALPHABET_MAP = {};\n\nfor (let i = 0; i < ALPHABET.length; i++)\n    ALPHABET_MAP[ALPHABET.charAt(i)] = i;\n\nconst BASE = 58;\n\nexport function encode58(buffer) {\n    if (buffer.length === 0) \n        return '';\n\n    let i;\n    let j;\n\n    const digits = [0];\n\n    for (i = 0; i < buffer.length; i++) {\n        for (j = 0; j < digits.length; j++) \n            digits[j] <<= 8;\n\n        digits[0] += buffer[i];\n        let carry = 0;\n\n        for (j = 0; j < digits.length; ++j) {\n            digits[j] += carry;\n            carry = (digits[j] / BASE) | 0;\n            digits[j] %= BASE\n        }\n\n        while (carry) {\n            digits.push(carry % BASE);\n            carry = (carry / BASE) | 0\n        }\n    }\n\n    for (i = 0; buffer[i] === 0 && i < buffer.length - 1; i++) \n        digits.push(0);\n\n    return digits.reverse().map(digit => ALPHABET[digit]).join('');\n}\n\nexport function decode58(string) {\n    if (string.length === 0) \n        return [];\n\n    let i;\n    let j;\n\n    const bytes = [0];\n\n    for (i = 0; i < string.length; i++) {\n        const c = string[i];\n\n        if (!(c in ALPHABET_MAP))\n            throw new Error('Non-base58 character');\n\n        for (j = 0; j < bytes.length; j++) \n            bytes[j] *= BASE;\n\n        bytes[0] += ALPHABET_MAP[c];\n        let carry = 0;\n\n        for (j = 0; j < bytes.length; ++j) {\n            bytes[j] += carry;\n            carry = bytes[j] >> 8;\n            bytes[j] &= 0xff;\n        }\n\n        while (carry) {\n            bytes.push(carry & 0xff);\n            carry >>= 8;\n        }\n    }\n\n    for (i = 0; string[i] === '1' && i < string.length - 1; i++)\n        bytes.push(0);\n\n    return bytes.reverse();\n}","export function Base64() {\n    this._keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n    this.encode = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n        \n        while (i < input.length) {\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2))\n                enc3 = enc4 = 64;\n            else if (isNaN(chr3))\n                enc4 = 64;\n\n            output = output +\n                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n        }\n\n        return output;\n    }\n\n    this.encodeIgnoreUtf8 = inputBytes => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n        \n        while (i < inputBytes.length) {\n            chr1 = inputBytes[i++];\n            chr2 = inputBytes[i++];\n            chr3 = inputBytes[i++];\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2))\n                enc3 = enc4 = 64;\n            else if (isNaN(chr3))\n                enc4 = 64;\n\n            output = output +\n                this._keyStr.charAt(enc1) + this._keyStr.charAt(enc2) +\n                this._keyStr.charAt(enc3) + this._keyStr.charAt(enc4);\n        }\n\n        return output;\n    }\n\n    this.decode = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n            enc1 = _keyStr.indexOf(input.charAt(i++));\n            enc2 = _keyStr.indexOf(input.charAt(i++));\n            enc3 = _keyStr.indexOf(input.charAt(i++));\n            enc4 = _keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64)\n                output = output + String.fromCharCode(chr2);\n                \n            if (enc4 != 64)\n                output = output + String.fromCharCode(chr3);\n        }\n        \n        return this._utf8_decode(output);\n    }\n\n    this.decodeToByteArray = input => {\n        let output = \"\";\n        let chr1;\n        let chr2;\n        let chr3;\n        let enc1;\n        let enc2;\n        let enc3;\n        let enc4;\n        let i = 0;\n\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n\n        while (i < input.length) {\n            enc1 = _keyStr.indexOf(input.charAt(i++));\n            enc2 = _keyStr.indexOf(input.charAt(i++));\n            enc3 = _keyStr.indexOf(input.charAt(i++));\n            enc4 = _keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 != 64)\n                output = output + String.fromCharCode(chr2);\n\n            if (enc4 != 64)\n                output = output + String.fromCharCode(chr3);\n        }\n        \n        return this._out2ByteArray(output);\n    }\n\n    this._out2ByteArray = utftext => {\n        const byteArray = new Array(utftext.length);\n\n        let i = 0;\n        let c = c1 = c2 = 0;\n\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n            byteArray[i] = c;\n            i++;\n        }\n\n        return byteArray;\n    }\n\n    this._utf8_encode = string => {\n        string = string.replace(/\\r\\n/g, \"\\n\");\n        let utftext = \"\";\n\n        for (let n = 0; n < string.length; n++) {\n            const c = string.charCodeAt(n);\n\n            if (c < 128) {\n                utftext += String.fromCharCode(c);\n            } else if ((c > 127) && (c < 2048)) {\n                utftext += String.fromCharCode((c >> 6) | 192);\n                utftext += String.fromCharCode((c & 63) | 128);\n            } else {\n                utftext += String.fromCharCode((c >> 12) | 224);\n                utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n                utftext += String.fromCharCode((c & 63) | 128);\n            }\n        }\n\n        return utftext;\n    }\n\n    this._utf8_decode = utftext => {\n        let string = \"\";\n        let i = 0;\n        let c = c1 = c2 = 0;\n\n        while (i < utftext.length) {\n            c = utftext.charCodeAt(i);\n\n            if (c < 128) {\n                string += String.fromCharCode(c);\n                i++;\n            } else if ((c > 191) && (c < 224)) {\n                c2 = utftext.charCodeAt(i + 1);\n                string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n                i += 2;\n            } else {\n                c2 = utftext.charCodeAt(i + 1);\n                c3 = utftext.charCodeAt(i + 2);\n\n                string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));\n\n                i += 3;\n            }\n        }\n\n        return string;\n    }\n}","import { Base64 } from './base64';\n\nexport function byte2hexStr(byte) {\n    const hexByteMap = '0123456789ABCDEF';\n\n    let str = '';\n    str += hexByteMap.charAt(byte >> 4);\n    str += hexByteMap.charAt(byte & 0x0f);\n\n    return str;\n}\n\nexport function bytesToString(arr) {\n    if (typeof arr === 'string')\n        return arr;\n        \n    let str = '';\n\n    for (let i = 0; i < arr.length; i++) {\n        const one = arr[i].toString(2);\n        const v = one.match(/^1+?(?=0)/);\n\n        if (v && one.length === 8) {\n            const bytesLength = v[0].length;\n            let store = arr[i].toString(2).slice(7 - bytesLength);\n\n            for (let st = 1; st < bytesLength; st++)\n                store += arr[st + i].toString(2).slice(2);\n\n            str += String.fromCharCode(parseInt(store, 2));\n            i += bytesLength - 1;\n        } else {\n            str += String.fromCharCode(arr[i]);\n        }\n    }\n\n    return str;\n}\n\nexport function hextoString(hex) {\n    const arr = hex.split('');\n    let out = '';\n\n    for (let i = 0; i < arr.length / 2; i++) {\n        let tmp = `0x${ arr[i * 2] }${ arr[i * 2 + 1] }`;\n        out += String.fromCharCode(tmp);\n    }\n\n    return out;\n}\n\nexport function base64DecodeFromString(string64) {\n    return new Base64().decodeToByteArray(string64);\n}\n\nexport function byteArray2hexStr(byteArray) {\n    let str = '';\n\n    for (let i = 0; i < (byteArray.length); i++)\n        str += byte2hexStr(byteArray[i]);\n        \n    return str;\n}","import { Base64 } from './base64';\n\nexport function bin2String(array) {\n    return String.fromCharCode(...array);\n}\n\nexport function arrayEquals(array1, array2) {\n    if (array1.length != array2.length)\n        return false;\n        \n    let i;\n\n    for (i = 0; i < array1.length; i++) {\n        if (array1[i] != array2[i])\n            return false;\n    }\n\n    return true;\n}\n\nexport function stringToBytes(str) {\n    const bytes = new Array();\n    let len;\n    let c;\n\n    len = str.length;\n\n    for (let i = 0; i < len; i++) {\n        c = str.charCodeAt(i);\n\n        if (c >= 0x010000 && c <= 0x10FFFF) {\n            bytes.push(((c >> 18) & 0x07) | 0xF0);\n            bytes.push(((c >> 12) & 0x3F) | 0x80);\n            bytes.push(((c >> 6) & 0x3F) | 0x80);\n            bytes.push((c & 0x3F) | 0x80);\n        } else if (c >= 0x000800 && c <= 0x00FFFF) {\n            bytes.push(((c >> 12) & 0x0F) | 0xE0);\n            bytes.push(((c >> 6) & 0x3F) | 0x80);\n            bytes.push((c & 0x3F) | 0x80);\n        } else if (c >= 0x000080 && c <= 0x0007FF) {\n            bytes.push(((c >> 6) & 0x1F) | 0xC0);\n            bytes.push((c & 0x3F) | 0x80);\n        } else bytes.push(c & 0xFF);\n    }\n\n    return bytes;\n}\n\nexport function bytesToString(arr) {\n    if (typeof arr === 'string')\n        return arr;\n        \n    let str = '';\n\n    for (let i = 0; i < arr.length; i++) {\n        const one = arr[i].toString(2);\n        const v = one.match(/^1+?(?=0)/);\n\n        if (v && one.length == 8) {\n            const bytesLength = v[0].length;\n            let store = arr[i].toString(2).slice(7 - bytesLength);\n\n            for (let st = 1; st < bytesLength; st++)\n                store += arr[st + i].toString(2).slice(2);\n\n            str += String.fromCharCode(parseInt(store, 2));\n            i += bytesLength - 1;\n        } else str += String.fromCharCode(arr[i]);\n    }\n\n    return str;\n}\n\nexport function hextoString(hex) {\n    const arr = hex.split(\"\");\n    let out = \"\";\n\n    for (let i = 0; i < arr.length / 2; i++) {\n        const tmp = `0x${arr[i * 2]}${arr[i * 2 + 1]}`;\n        const charValue = String.fromCharCode(tmp);\n\n        out += charValue;\n    }\n\n    return out\n}\n\nexport function hexChar2byte(c) {\n    let d = 0;\n\n    if (c >= 'A' && c <= 'F')\n        d = c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n    else if (c >= 'a' && c <= 'f')\n        d = c.charCodeAt(0) - 'a'.charCodeAt(0) + 10;\n    else if (c >= '0' && c <= '9')\n        d = c.charCodeAt(0) - '0'.charCodeAt(0);\n        \n    return d;\n}\n\nexport function isHexChar(c) {\n    if ((c >= 'A' && c <= 'F') ||\n        (c >= 'a' && c <= 'f') ||\n        (c >= '0' && c <= '9')) {\n        return 1;\n    }\n\n    return 0;\n}\n\nexport function hexStr2byteArray(str) {\n    const byteArray = Array();\n    let d = 0;\n    let j = 0;\n    let k = 0;\n\n    for (let i = 0; i < str.length; i++) {\n        const c = str.charAt(i);\n\n        if (isHexChar(c)) {\n            d <<= 4;\n            d += hexChar2byte(c);\n            j++;\n\n            if (0 === (j % 2)) {\n                byteArray[k++] = d;\n                d = 0;\n            }\n        }\n    }\n\n    return byteArray;\n}\n\nexport function byte2hexStr(byte) {\n    const hexByteMap = \"0123456789ABCDEF\";\n    let str = \"\";\n\n    str += hexByteMap.charAt(byte >> 4);\n    str += hexByteMap.charAt(byte & 0x0f);\n\n    return str;\n}\n\nexport function byteArray2hexStr(byteArray) {\n    return byteArray.reduce((string, byte) => {\n        return string + byte2hexStr(byte);\n    }, '');\n}\n\nexport function base64DecodeFromString(string64) {\n    const b = new Base64();\n    const decodeBytes = b.decodeToByteArray(string64);\n\n    return decodeBytes;\n}\n\nexport function base64EncodeToString(bytes) {\n    const b = new Base64();\n    const string64 = b.encodeIgnoreUtf8(bytes);\n\n    return string64\n}\n\n//yyyy-MM-DD HH-mm-ss\nexport function strToDate(str) {\n    const tempStrs = str.split(\" \");\n    const dateStrs = tempStrs[0].split(\"-\");\n    const year = parseInt(dateStrs[0], 10);\n    const month = parseInt(dateStrs[1], 10) - 1;\n    const day = parseInt(dateStrs[2], 10);\n\n    if (tempStrs.length > 1) {\n        const timeStrs = tempStrs[1].split(\"-\");\n        const hour = parseInt(timeStrs[0], 10);\n        const minute = parseInt(timeStrs[1], 10) - 1;\n        const second = parseInt(timeStrs[2], 10);\n\n        return new Date(year, month, day, hour, minute, second);\n    }\n\n    return new Date(year, month, day);\n}\n\nexport function isNumber(c) {\n    if (c >= '0' && c <= '9')\n        return 1;\n        \n    return 0;\n}\n\n//return 1: address  --- 20Bytes HexString\n//return 2: blockNumber ------ Decimal number\n//return 3: assetName ------ String\n//return other: error\nexport function getStringType(str) {\n    if (null == str)\n        return -1;\n\n    if (typeof (str) != 'string')\n        return -1;\n\n    if (str.length == 0 || str == \"\")\n        return -1;\n\n    let i = 0;\n\n    if (str.length == 40) {\n        for (; i < 40; i++) {\n            var c = str.charAt(i);\n\n            if (!isHexChar(c))\n                break;\n        }\n    }\n\n    if (i == 40)\n        return 1; //40 Hex, Address\n\n    for (i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n\n        if (!isNumber(c))\n            break;\n    }\n\n    if (i == str.length)\n        return 2; //Alll Decimal number, BlockNumber\n\n    for (i = 0; i < str.length; i++) {\n        var c = str.charAt(i);\n\n        if (c > ' ')\n            return 3; //At least one visible character\n    }\n\n    return -1;\n}","import jsSHA from 'jssha';\n\nimport { ADDRESS_PREFIX, ADDRESS_PREFIX_BYTE } from './address';\nimport { base64EncodeToString } from './code';\nimport { base64DecodeFromString, hexStr2byteArray } from './code';\nimport { encode58, decode58 } from './base58';\nimport { keccak256 } from 'js-sha3';\nimport { ADDRESS_SIZE } from './address';\nimport { byte2hexStr, byteArray2hexStr } from './bytes';\nimport { ec as EC } from 'elliptic';\n\nexport function getBase58CheckAddress(addressBytes) {\n    const hash0 = SHA256(addressBytes);\n    const hash1 = SHA256(hash0);\n\n    let checkSum = hash1.slice(0, 4);\n    checkSum = addressBytes.concat(checkSum);\n\n    return encode58(checkSum);\n}\n\nexport function decodeBase58Address(base58Sting) {\n    if (typeof (base58Sting) != 'string')\n        return false;\n\n    if (base58Sting.length <= 4)\n        return false;\n\n    let address = decode58(base58Sting);\n\n    if (base58Sting.length <= 4)\n        return false;\n\n    const len = address.length;\n    const offset = len - 4;\n    const checkSum = address.slice(offset);\n\n    address = address.slice(0, offset);\n\n    const hash0 = SHA256(address);\n    const hash1 = SHA256(hash0);\n    const checkSum1 = hash1.slice(0, 4);\n\n    if (checkSum[0] == checkSum1[0] && checkSum[1] == checkSum1[1] && checkSum[2] ==\n        checkSum1[2] && checkSum[3] == checkSum1[3]\n    ) {\n        return address;\n    }\n\n    return hexStr2byteArray('000000000000000000000000000000000000000000');\n}\n\nexport function signTransaction(priKeyBytes, transaction) {\n    if (typeof priKeyBytes === 'string')\n        priKeyBytes = hexStr2byteArray(priKeyBytes);\n\n    const txID = transaction.txID;\n    const signature = ECKeySign(hexStr2byteArray(txID), priKeyBytes);\n\n    transaction.signature = [ signature ];\n    return transaction;\n}\n\nexport function arrayToBase64String(a) {\n    return btoa(String.fromCharCode(...a));\n}\n\nexport function signBytes(privateKey, contents) {\n    if (typeof privateKey === 'string')\n        privateKey = hexStr2byteArray(privateKey);\n\n    const hashBytes = SHA256(contents);\n    const signBytes = ECKeySign(hashBytes, privateKey);\n\n    return signBytes;\n}\n\nexport function getRowBytesFromTransactionBase64(base64Data) {\n    const bytesDecode = base64DecodeFromString(base64Data);\n    const transaction = proto.protocol.Transaction.deserializeBinary(bytesDecode);\n    const raw = transaction.getRawData();\n\n    return raw.serializeBinary();\n}\n\nexport function genPriKey() {\n    const ec = new EC('secp256k1');\n    const key = ec.genKeyPair();\n    const priKey = key.getPrivate();\n\n    let priKeyHex = priKey.toString('hex');\n\n    while (priKeyHex.length < 64) {\n        priKeyHex = `0${priKeyHex}`;\n    }\n\n    return hexStr2byteArray(priKeyHex);\n}\n\nexport function computeAddress(pubBytes) {\n    if (pubBytes.length === 65)\n        pubBytes = pubBytes.slice(1);\n\n    const hash = keccak256(pubBytes).toString();\n    const addressHex = ADDRESS_PREFIX + hash.substring(24);\n\n    return hexStr2byteArray(addressHex);\n}\n\nexport function getAddressFromPriKey(priKeyBytes) {\n    let pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    return computeAddress(pubBytes);\n}\n\nexport function decode58Check(addressStr) {\n    const decodeCheck = decode58(addressStr);\n\n    if (decodeCheck.length <= 4)\n        return false;\n\n    const decodeData = decodeCheck.slice(0, decodeCheck.length - 4);\n    const hash0 = SHA256(decodeData);\n    const hash1 = SHA256(hash0);\n\n    if (hash1[0] === decodeCheck[decodeData.length] &&\n        hash1[1] === decodeCheck[decodeData.length + 1] &&\n        hash1[2] === decodeCheck[decodeData.length + 2] &&\n        hash1[3] === decodeCheck[decodeData.length + 3]) {\n        return decodeData;\n    }\n\n    return false;\n}\n\nexport function isAddressValid(base58Str) {\n    if (typeof (base58Str) !== 'string')\n        return false;\n        \n    if (base58Str.length !== ADDRESS_SIZE)\n        return false;\n\n    let address = decode58(base58Str);\n\n    if (address.length !== 25)\n        return false;\n        \n    if (address[0] !== ADDRESS_PREFIX_BYTE)\n        return false;\n        \n    const checkSum = address.slice(21);\n    address = address.slice(0, 21);\n\n    const hash0 = SHA256(address);\n    const hash1 = SHA256(hash0);\n    const checkSum1 = hash1.slice(0, 4);\n\n    if (checkSum[0] == checkSum1[0] && checkSum[1] == checkSum1[1] && checkSum[2] ==\n        checkSum1[2] && checkSum[3] == checkSum1[3]\n    ) {\n        return true\n    }\n\n    return false;\n}\n\nexport function getBase58CheckAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n\n    return getBase58CheckAddress(addressBytes);\n}\n\nexport function getHexStrAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n    const addressHex = byteArray2hexStr(addressBytes);\n\n    return addressHex;\n}\n\nexport function getAddressFromPriKeyBase64String(priKeyBase64String) {\n    const priKeyBytes = base64DecodeFromString(priKeyBase64String);\n    const pubBytes = getPubKeyFromPriKey(priKeyBytes);\n    const addressBytes = computeAddress(pubBytes);\n    const addressBase64 = base64EncodeToString(addressBytes);\n\n    return addressBase64;\n}\n\nexport function getPubKeyFromPriKey(priKeyBytes) {\n    const ec = new EC('secp256k1');\n    const key = ec.keyFromPrivate(priKeyBytes, 'bytes');\n    const pubkey = key.getPublic();\n    const x = pubkey.x;\n    const y = pubkey.y;\n\n    let xHex = x.toString('hex');\n\n    while (xHex.length < 64) {\n        xHex = `0${xHex}`;\n    }\n\n    let yHex = y.toString('hex');\n\n    while (yHex.length < 64) {\n        yHex = `0${yHex}`;\n    }\n\n    const pubkeyHex = `04${xHex}${yHex}`;\n    const pubkeyBytes = hexStr2byteArray(pubkeyHex);\n\n    return pubkeyBytes;\n}\n\nexport function ECKeySign(hashBytes, priKeyBytes) {\n    const ec = new EC('secp256k1');\n    const key = ec.keyFromPrivate(priKeyBytes, 'bytes');\n    const signature = key.sign(hashBytes);\n    const r = signature.r;\n    const s = signature.s;\n    const id = signature.recoveryParam;\n\n    let rHex = r.toString('hex');\n\n    while (rHex.length < 64) {\n        rHex = `0${rHex}`;\n    }\n\n    let sHex = s.toString('hex');\n\n    while (sHex.length < 64) {\n        sHex = `0${sHex}`;\n    }\n\n    const idHex = byte2hexStr(id);\n    const signHex = rHex + sHex + idHex;\n\n    return signHex;\n}\n\nexport function SHA256(msgBytes) {\n    const shaObj = new jsSHA('SHA-256', 'HEX');\n    const msgHex = byteArray2hexStr(msgBytes);\n\n    shaObj.update(msgHex);\n    const hashHex = shaObj.getHash('HEX');\n\n    return hexStr2byteArray(hashHex);\n}\n\nexport function passwordToAddress(password) {\n    const com_priKeyBytes = base64DecodeFromString(password);\n    const com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n\n    return getBase58CheckAddress(com_addressBytes);\n}\n\nexport function pkToAddress(privateKey) {\n    const com_priKeyBytes = hexStr2byteArray(privateKey);\n    const com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n\n    return getBase58CheckAddress(com_addressBytes);\n}","import * as accounts from './accounts';\nimport * as base58 from './base58';\nimport * as bytes from './bytes';\nimport * as crypto from './crypto';\nimport * as code from './code';\n\nimport validator from 'validator';\nimport BigNumber from 'bignumber.js';\n\nconst utils = {\n    isValidURL(url) {\n        return validator.isURL(url.toString(), {\n            protocols: [ 'http', 'https' ]\n        });\n    },\n\n    isObject(obj) {\n        return obj === Object(obj) && Object.prototype.toString.call(obj) !== '[object Array]';\n    },\n\n    isArray(array) {\n        return Array.isArray(array);\n    },\n\n    isJson(string) {\n        try {\n            return !!JSON.parse(string);\n        } catch (ex) {\n            return false;\n        }\n    },\n\n    isBoolean(bool) {\n        return typeof bool === 'boolean';\n    },\n\n    isBigNumber(number) {\n        return number && (number instanceof BigNumber || (number.constructor && number.constructor.name === 'BigNumber'));\n    },\n\n    isString(string) {\n        return typeof string === 'string' || (string && string.constructor && string.constructor.name === 'String');\n    },\n\n    isFunction(obj) {\n        return typeof obj === 'function';\n    },\n\n    isHex(string) {\n        return typeof string === 'string' && !isNaN(parseInt(string, 16));\n    },\n\n    isInteger(number) {\n        return Number.isInteger(\n            Number(number)\n        );\n    },\n\n    hasProperty(obj, property) {\n        return Object.prototype.hasOwnProperty.call(obj, property);\n    },\n\n    hasProperties(obj, ...properties) {\n        return properties.length && !properties.map(property => {\n            return this.hasProperty(obj, property)\n        }).includes(false);\n    },\n\n    injectPromise(func, ...args) {\n        return new Promise((resolve, reject) => {\n            func(...args, (err, res) => {\n                if(err)\n                    reject(err);\n                else resolve(res);\n            });\n        });\n    },\n\n    promiseInjector(scope) {\n        return (func, ...args) => {\n            return this.injectPromise(func.bind(scope), ...args);\n        }\n    },\n\n    mapEvent(event) {\n        return {\n            block: event.block_number,\n            timestamp: event.block_timestamp,\n            contract: event.contract_address,\n            name: event.event_name,\n            transaction: event.transaction_id,\n            result: event.result\n        };\n    },\n\n    parseEvent(event, { inputs: abi }) {\n        if(!event.result)\n            return event;\n\n        event.result = event.result.reduce((obj, result, index) => {\n            const {\n                name,\n                type\n            } = abi[index];\n\n            if(type == 'address')\n                result = '41' + result.substr(2).toLowerCase();\n\n            obj[name] = result;\n\n            return obj;\n        }, {});\n\n        return event;\n    }\n}\n\nexport default {\n    ...utils,\n    code,\n    accounts,\n    base58,\n    bytes,\n    crypto\n};","module.exports = require(\"@babel/runtime/helpers/asyncToGenerator\");","module.exports = require(\"@babel/runtime/helpers/classCallCheck\");","module.exports = require(\"@babel/runtime/helpers/createClass\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","module.exports = require(\"@babel/runtime/helpers/objectSpread\");","module.exports = require(\"@babel/runtime/helpers/slicedToArray\");","module.exports = require(\"@babel/runtime/helpers/toConsumableArray\");","module.exports = require(\"@babel/runtime/helpers/typeof\");","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"axios\");","module.exports = require(\"bignumber.js\");","module.exports = require(\"elliptic\");","module.exports = require(\"ethers\");","module.exports = require(\"js-sha3\");","module.exports = require(\"jssha\");","module.exports = require(\"source-map-support/register\");","module.exports = require(\"validator\");"],"sourceRoot":""}